<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util
                   http://www.springframework.org/schema/util
                   http://www.springframework.org/schema/util/spring-util-3.0.xsd"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.music.controller" />
    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <mvc:annotation-driven>
    <mvc:message-converters>
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes">
          <list>
         <value>text/plain;charset=utf-8</value>
         <value>text/html;charset=UTF-8</value>
         <value>text/json;charset=UTF-8</value>
         <value>application/json;charset=utf-8</value>
          </list>
        </property>
    </bean>
</mvc:message-converters>
</mvc:annotation-driven>

    <!-- !!这个是Spring3.1之前版本的注解声明，现在已经不需要了 -->
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    
  <!--   <bean
            class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" />	<!- JSON转换器 ->
            </list>
        </property>
    </bean>
    -->
    <!-- !!Spring3.1版本之后的必须成对出现的HTTP请求相关的注解映射器和注解适配器 -->
    
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" />
   


    <!-- !!上面两行太长，下面的配置可以直接替代上面配置的两个注解组件，担负了处理器映射器和处理器适配器双重作用，
     而且默认加载了很多东西，包括Json转换解析器-->
    <!-- !!映射器的作用是通过URL找到Handler也即Controller -->
    <!-- !!适配器的作用是执行Handler,Handler也即Controller是根据适配器的规范来写的-->
    <!-- <mvc:annotation-driven/> -->
    

    <!-- !!只让MVC扫描包内的Controller，处理Request请求URL到具体的Controller和具体方法，防止Spring将Controller -->
    <!-- !!扫描到自己的容器内导致MVC容器内没有Controller而跳转失效问题 -->
    <context:component-scan base-package="com.music.controller" >
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    <!--静态资源配置  -->
    <mvc:default-servlet-handler /> 
<!--     <mvc:resources location="static/css/" mapping="/css/**" cache-period="31556926"/>
     <mvc:resources location="static/fonts/" mapping="/fonts/**" cache-period="31556926"/>
      <mvc:resources location="static/img/" mapping="/img/**" cache-period="31556926"/>
       <mvc:resources location="static/js/" mapping="/js/**" cache-period="31556926"/>
         <mvc:resources location="static/images/" mapping="/images/**" cache-period="31556926"/>
      -->
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
  
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>

</beans>